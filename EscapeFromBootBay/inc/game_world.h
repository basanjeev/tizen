/* This file has been automatically generated by geneet.py */
/*                      DO NOT MODIFY                      */

#ifndef __GAME_WORLD_H__
#define __GAME_WORLD_H__

#include <Eina.h>
#include <Eet.h>

typedef struct _Target Target;
typedef struct _Block Block;
typedef struct _Object Object;
typedef struct _Level Level;
typedef struct _World World;

/* Target */
Target *target_new(const char * type, int x, int y, int w, int h);
void target_free(Target *target);

void target_type_set(Target *target, const char * type);
const char * target_type_get(const Target *target);
void target_x_set(Target *target, int x);
int target_x_get(const Target *target);
void target_y_set(Target *target, int y);
int target_y_get(const Target *target);
void target_w_set(Target *target, int w);
int target_w_get(const Target *target);
void target_h_set(Target *target, int h);
int target_h_get(const Target *target);

/* Block */
Block *block_new(const char * type, int x, int y, int w, int h, int mass, int relto);
void block_free(Block *block);

void block_type_set(Block *block, const char * type);
const char * block_type_get(const Block *block);
void block_x_set(Block *block, int x);
int block_x_get(const Block *block);
void block_y_set(Block *block, int y);
int block_y_get(const Block *block);
void block_w_set(Block *block, int w);
int block_w_get(const Block *block);
void block_h_set(Block *block, int h);
int block_h_get(const Block *block);
void block_mass_set(Block *block, int mass);
int block_mass_get(const Block *block);
void block_relto_set(Block *block, int relto);
int block_relto_get(const Block *block);

/* Object */
Object *object_new(const char * type, int x, int y, int w, int h, int above);
void object_free(Object *object);

void object_type_set(Object *object, const char * type);
const char * object_type_get(const Object *object);
void object_x_set(Object *object, int x);
int object_x_get(const Object *object);
void object_y_set(Object *object, int y);
int object_y_get(const Object *object);
void object_w_set(Object *object, int w);
int object_w_get(const Object *object);
void object_h_set(Object *object, int h);
int object_h_get(const Object *object);
void object_above_set(Object *object, int above);
int object_above_get(const Object *object);

/* Level */
Level *level_new(int level_num, const char * level_id, int cannon_pos_x, int cannon_pos_y, int ammo, int bg, int time_attack, Eina_List * blocks, Eina_List * targets, Eina_List * objects);
void level_free(Level *level);

void level_level_num_set(Level *level, int level_num);
int level_level_num_get(const Level *level);
void level_level_id_set(Level *level, const char * level_id);
const char * level_level_id_get(const Level *level);
void level_cannon_pos_x_set(Level *level, int cannon_pos_x);
int level_cannon_pos_x_get(const Level *level);
void level_cannon_pos_y_set(Level *level, int cannon_pos_y);
int level_cannon_pos_y_get(const Level *level);
void level_ammo_set(Level *level, int ammo);
int level_ammo_get(const Level *level);
void level_bg_set(Level *level, int bg);
int level_bg_get(const Level *level);
void level_time_attack_set(Level *level, int time_attack);
int level_time_attack_get(const Level *level);
void level_blocks_add(Level *level, Block *block);
void level_blocks_del(Level *level, Block *block);
Block *level_blocks_get(const Level *level, unsigned int nth);
unsigned int level_blocks_count(const Level *level);
Eina_List *level_blocks_list_get(const Level *level);
void level_blocks_list_clear(Level *level);
void level_blocks_list_set(Level *level, Eina_List *list);
void level_targets_add(Level *level, Target *target);
void level_targets_del(Level *level, Target *target);
Target *level_targets_get(const Level *level, unsigned int nth);
unsigned int level_targets_count(const Level *level);
Eina_List *level_targets_list_get(const Level *level);
void level_targets_list_clear(Level *level);
void level_targets_list_set(Level *level, Eina_List *list);
void level_objects_add(Level *level, Object *object);
void level_objects_del(Level *level, Object *object);
Object *level_objects_get(const Level *level, unsigned int nth);
unsigned int level_objects_count(const Level *level);
Eina_List *level_objects_list_get(const Level *level);
void level_objects_list_clear(Level *level);
void level_objects_list_set(Level *level, Eina_List *list);

/* World */
World *world_new(Eina_List * levels);
void world_free(World *world);

void world_levels_add(World *world, Level *level);
void world_levels_del(World *world, Level *level);
Level *world_levels_get(const World *world, unsigned int nth);
unsigned int world_levels_count(const World *world);
Eina_List *world_levels_list_get(const World *world);
void world_levels_list_clear(World *world);
void world_levels_list_set(World *world, Eina_List *list);

World *world_load(const char *filename);
Eina_Bool world_save(World *world, const char *filename);

/* Global initializer / shutdown functions */
void game_world_init(void);
void game_world_shutdown(void);

#endif /* __GAME_WORLD_H__ */
